# Local nginx setup (same as production)
# Adapted from ENCODE, https://gist.github.com/denji/8359866 and https://www.digitalocean.com/community/tools/nginx

error_log  /var/log/nginx/error.log warn;
worker_processes auto;

events {
    worker_connections  1024;
}
http {
    resolver 8.8.8.8;

    # cache information about FDs, might need tuning
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # We get access_log from the LB
    access_log off;

    # Some additional optimizations
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    log_not_found off;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;
    client_max_body_size 16M;

    # enable gzip
    gzip            on;
    gzip_vary       on;
    gzip_proxied    any;
    gzip_comp_level 6;
    gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    upstream app {
        server 0.0.0.0:6543;
        keepalive 32;
    }

    server {
        listen 8000;
        port_in_redirect off;

        # security headers
        add_header X-XSS-Protection        "1; mode=block" always;
        add_header X-Content-Type-Options  "nosniff" always;
        add_header Referrer-Policy         "no-referrer-when-downgrade" always;
        add_header Permissions-Policy      "interest-cohort=()" always;

        location / {
            # Normalize duplicate slashes
            if ($request ~ ^(GET|HEAD)\s([^?]*)//(.*)\sHTTP/[0-9.]+$) {
                return 301 $2/$3;
            }
            proxy_set_header  Host  $http_host;
            proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto  $scheme;
            proxy_pass  http://app;
            proxy_set_header  Connection  "";
        }
      location ~ ^/_proxy/(.*)$ {
          internal;
          proxy_set_header Authorization "";
          proxy_set_header Content-Type "";
          proxy_buffering off;
          proxy_pass $1$is_args$args;
      }
    }
}
