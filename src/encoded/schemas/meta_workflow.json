{
    "title": "MetaWorkflow",
    "description": "Schema for a meta workflow that connects a set of computational analysis workflows",
    "id": "/profiles/meta_workflow.json",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "required": [
        "title",
        "name",
        "project",
        "institution"
    ],
    "additionalProperties": false,
    "identifyingProperties": [
        "uuid",
        "aliases",
        "accession"
    ],
    "mixinProperties": [
        {
            "$ref": "mixins.json#/schema_version"
        },
        {
            "$ref": "mixins.json#/aliases"
        },
        {
            "$ref": "mixins.json#/uuid"
        },
        {
            "$ref": "mixins.json#/status"
        },
        {
            "$ref": "mixins.json#/submitted"
        },
        {
            "$ref": "mixins.json#/modified"
        },
        {
            "$ref": "mixins.json#/documents"
        },
        {
            "$ref": "mixins.json#/attribution"
        },
        {
            "$ref": "mixins.json#/static_embeds"
        },
        {
            "$ref": "mixins.json#/tags"
        },
        {
            "$ref": "mixins.json#/accession"
        }
    ],
    "mixinFacets": [
        {
            "$ref": "mixins.json#/facets_common"
        }
    ],
    "properties": {
        "schema_version": {
            "default": "1"
        },
        "accession": {
            "accessionType": "MW"
        },
        "title": {
            "title": "Title",
            "description": "The preferred viewable name of the meta workflow.",
            "type": "string"
        },
        "name": {
            "title": "Name",
            "description": "The name of the meta workflow",
            "type": "string"
        },
        "description": {
            "title": "Description",
            "description": "A short text description of the meta workflow.",
            "type": "string",
            "formInput": "textarea"
        },
        "version": {
            "title": "Version",
            "description": "The version of the meta workflow.",
            "type": "string"
        },
        "previous_version": {
            "title": "Previous versions",
            "description": "Link to the previous versions of the meta workflow.",
            "type": "array",
            "items": {
                "title": "Previous version",
                "description": "Link to a previous version of the meta workflow.",
                "type": "string",
                "linkTo": "MetaWorkflow"
            }
        },
        "version_upgrade_log": {
            "title": "Version upgrade log",
            "description": "Version upgrade log",
            "type": "string"
        },
        "workflows": {
            "title": "Workflows",
            "type": "array",
            "items": {
                "title": "Workflows",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the workflow, unique within the meta workflow",
                        "type": "string"
                    },
                    "workflow": {
                        "title": "Workflow",
                        "description": "Link to the workflow item",
                        "type": "string",
                        "linkTo": "Workflow"
                    },
                    "input": {
                        "title": "Workflow Inputs",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "argument_name": {
                                    "title": "Input Argument Name",
                                    "type": "string"
                                },
                                "argument_type": {
                                    "title": "Input Argument type",
                                    "description": "input argument type (either file or parameter)",
                                    "type": "string",
                                    "enum": [
                                        "file",
                                        "parameter"
                                    ]
                                },
                                "value": {
                                    "title": "Value",
                                    "description": "a specific input parameter value",
                                    "type": "string"
                                },
                                "value_type": {
                                    "title": "Value Type",
                                    "description": "Type of the specific input parameter value",
                                    "type": "string",
                                    "enum": [
                                        "string",
                                        "integer",
                                        "float",
                                        "json",
                                        "boolean"
                                    ]
                                },
                                "source": {
                                    "title": "Source Workflow",
                                    "description": "Where this input file came from (source workflow name). If this field is null or undefined, the input is global and not from another workflow's output.",
                                    "type": "string"
                                },
                                "source_argument_name": {
                                    "title": "Argument name in the Source Workflow",
                                    "description": "Output argument name in the source workflow",
                                    "type": "string"
                                },
                                "scatter": {
                                    "title": "Scatter",
                                    "description": "The input dimension decrease if scattered into mutiple runs (default: not set)",
                                    "type": "integer"
                                },
                                "gather": {
                                    "title": "Gather",
                                    "description": "The input dimension increase from multiple runs of the source workflow (default: not set)",
                                    "type": "integer"
                                },
                                "extra_dimension": {
                                    "title": "Extra Dimension",
                                    "description": "The extra input dimension increase other than that defined by gather (default: not set)",
                                    "type": "integer"
                                },
                                "mount": {
                                    "title": "Mount",
                                    "description": "Whether the input is mounted",
                                    "type": "boolean"
                                },
                                "rename": {
                                    "title": "Rename",
                                    "description": "What the input should be renamed to when downloaded to EC2 for execution",
                                    "type": "string"
                                },
                                "unzip": {
                                    "title": "Unzip",
                                    "description": "How the input should be decompressed when downloaded to EC2 for execution",
                                    "type": "string",
                                    "enum": [
                                        "gz",
                                        "bz2"
                                    ]
                                }
                            }
                        }
                    },
                    "dependencies": {
                        "title": "Dependencies",
                        "description": "forced dependencies (other than deduced from input-output connections)",
                        "type": "array",
                        "items": {
                            "title": "Dependency",
                            "description": "One of the forced dependencies",
                            "type": "string"
                        }
                    },
                    "config": {
                        "title": "Config",
                        "description": "Tibanna configuration for execution",
                        "type": "object",
                        "additionalProperties": true
                    },
                    "custom_pf_fields": {
                        "title": "Custom PF fields",
                        "description": "Custom fields to be added to specified processed file items through Tibanna",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "Custom fields to be added to processed file items through Tibanna",
                            "comment": "Ensure all properties here are same as those located on processed file schema",
                            "properties": {
                                "description": {
                                    "title": "Description",
                                    "description": "A plain text description of the file.",
                                    "type": "string"
                                },
                                "file_type": {
                                    "title": "File Type",
                                    "description": "The type of file based on the information in the file.",
                                    "suggested_enum": [
                                        "alignments",
                                        "image",
                                        "other",
                                        "intermediate file",
                                        "raw VCF",
                                        "gVCF",
                                        "Higlass SV VCF",
                                        "full annotated VCF"
                                    ]
                                },
                                "variant_type": {
                                    "title": "Variant Type",
                                    "description": "The variant type associated with this file",
                                    "type": "string",
                                    "enum": [
                                        "SNV",
                                        "SV"
                                    ]
                                },
                                "linkto_location": {
                                    "title": "LinkTo Location",
                                    "description": "Location on case on which to place a linkTo",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "Sample",
                                            "SampleProcessing"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "custom_qc_fields": {
                        "title": "Custom QC fields",
                        "description": "Custom fields to be added to QC items through Tibanna",
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "filtering_condition": {
                                "title": "Filtering Condition",
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "input": {
            "title": "Input Arguments",
            "description": "Global input arguments of the meta-workflow",
            "type": "array",
            "items": {
                "title": "Input Argument",
                "description": "individual global input argument of the meta-workflow. Additional property default_value may be defined.",
                "type": "object",
                "additionalProperties": true,
                "properties": {
                    "argument_name": {
                        "title": "Argument Name",
                        "description": "Name of the workflow, unique within the meta workflow",
                        "type": "string"
                    },
                    "argument_type": {
                        "title": "Argument Type",
                        "description": "Name of the workflow, unique within the meta workflow",
                        "type": "string"
                    },
                    "value": {
                        "title": "Default value",
                        "description": "Default value of the parameter-type argument",
                        "type": "string"
                    },
                    "value_type": {
                        "title": "Value Type",
                        "description": "Type of the specific input parameter value",
                        "type": "string",
                        "enum": [
                            "string",
                            "integer",
                            "float",
                            "json",
                            "boolean"
                        ]
                    },
                    "files": {
                        "title": "Default files",
                        "description": "Default file item(s) of the file argument",
                        "type": "array",
                        "items": {
                            "title": "Default Files",
                            "description": "A list of objects describing default input file items",
                            "type": "object",
                            "properties": {
                                "file": {
                                    "title": "File",
                                    "type": "string",
                                    "linkTo": "File"
                                },
                                "dimension": {
                                    "title": "Dimension",
                                    "description": "Dimension of file in the input argument (unset for a singleton, '0', '1', '2'.. for a list, '0,0', '0,1' ... for a nested list)",
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "facets": {
        "workflows.workflow.display_title": {
            "title": "Workflow"
        }
    },
    "columns": {
        "name": {
            "title": "Name"
        },
        "version": {
            "title": "Version",
            "colTitle": "Version"
        }
    }
}
